#!/bin/sh
#jinstall - Command line script to easily add new java directories to
#'alternatives'. This sets the java as default, and you can switch your
#default java with update-java-alternatives
#
#Copyright 2012 Bruce.Ingalls at gmail & Alin Andrei <webupd8@gmail.com>
#GPL v3 Affero license at http://www.gnu.org/
#Downloads & discussion at http://www.webupd8.org/
#Tested on Ubuntu Oneiric; should require few changes for other modern Unix systems
#Currently tested only with JDK, not JRE.
# Not fully internationalized, including japanese man pages

set -e

VER='0.6alpha'

case $(uname -m) in
  'i686'    ) arch=i386; dld=i586;;
  'x86_64'  ) arch=amd64; dld=x64;;
  *         )
    echo "Please report to author unsupported platform '`uname -m`'.";
    echo "Proceeding without web browser plugin support";
    arch='';
esac


########Variables

JAVA_VERSION=7u9 #must be modified for each release
FILENAME=jdk-${JAVA_VERSION}-linux-${dld}.tar.gz
for JAVA_VERSION_OLD in `seq 1 8`; do #must be modified for each release ("1 3" for 7u4; "1 4" for 7u5, etc)
    FILENAMES_OLD="jdk-7u${JAVA_VERSION_OLD}-linux-${dld}.tar.gz $FILENAMES_OLD"
done
case $(uname -m) in
  'i686'    ) SHA256SUM_TGZ="47e86ceb7f59c821a8d0c54f34530bca84e10c1849ed46da7f4fdb5f621bc8d6";; #must be modified for each release
  'x86_64'  ) SHA256SUM_TGZ="1b39fe2a3a45b29ce89e10e59be9fbb671fb86c13402e29593ed83e0b419c8d7";; #must be modified for each release
  *         )
    echo "Please report to author unsupported platform '`uname -m`'.";
    echo "Proceeding without web browser plugin support";
esac
PARTNER_URL=http://gds-public-readable-tarballs.s3.amazonaws.com/$FILENAME #must be modified for each release!!!
J_INSTALL_DIR=/usr/lib/jvm/java-7-oracle
J_DIR=jdk1.7.0_09 #must be modified for each release

########Create dirs
mkdir -p /var/cache/oracle-jdk7-installer
mkdir -p /usr/lib/jvm
mkdir -p /usr/lib/oracle-jdk7-installer-unpackdir
#without this, an error is displayed if the folder doesn't exist:
mkdir -p /usr/lib/mozilla/plugins/

#############



. /usr/share/debconf/confmodule

fp_exit_with_error() {
	echo $1
	echo "Oracle JDK 7 is NOT installed."
	db_fset oracle-java7-installer/local seen false
	exit 1
}

fp_download_and_unpack() {

	cd /var/cache/oracle-jdk7-installer

	db_get oracle-java7-installer/local
	if [ -d "$RET" -a -f "$RET"/$FILENAME ]; then

		echo "Installing from local file $RET/$FILENAME"
		cp -f -p "$RET"/$FILENAME ${FILENAME}_TEMP
		mv -f ${FILENAME}_TEMP $FILENAME
	else # no local file

		# use apt proxy
		APT_PROXIES=$(apt-config shell \
		http_proxy Acquire::http::Proxy \
		https_proxy Acquire::https::Proxy \
		ftp_proxy Acquire::ftp::Proxy \
		)

		if [ -n "$APT_PROXIES" ]; then
			eval export $APT_PROXIES
		fi

		# setting wget options
		:> wgetrc
		echo "noclobber = off" >> wgetrc
		echo "dir_prefix = ." >> wgetrc
		echo "dirstruct = off" >> wgetrc
		echo "verbose = on" >> wgetrc
		echo "progress = dot:mega" >> wgetrc
		echo "tries = 2" >> wgetrc

		# Removing outdated cached downloads
		echo "Removing outdated cached downloads..."
		rm -vf $FILENAMES_OLD

		# downloading jdk7
		echo "Downloading Oracle Java 7..."
		WGETRC=wgetrc wget --continue -O $FILENAME --header "Cookie: gpw_e24=h" $PARTNER_URL \
			|| fp_exit_with_error "download failed"
		echo "Download done."

	fi # end if local file

	# verify SHA256 checksum of (copied or downloaded) tarball
	rm -rf jdk*/
        echo "$SHA256SUM_TGZ  $FILENAME" | sha256sum -c > /dev/null 2>&1 \
		|| fp_exit_with_error "sha256sum mismatch $FILENAME"

	# unpacking and checking the plugin
	tar xzf $FILENAME || fp_exit_with_error "cannot unpack jdk7"
}

OLDDIR=/usr/lib/oracle-jdk7-installer-unpackdir
NEWDIR=/var/cache/oracle-jdk7-installer

safe_move() {
	[ ! -f $OLDDIR/$1 ] || [ -f $NEWDIR/$1 ] || mv $OLDDIR/$1 $NEWDIR/$1 2> /dev/null || true
	[ ! -f $OLDDIR/$1 ] || [ ! -f $NEWDIR/$1 ] || rm -f $OLDDIR/$1 2> /dev/null || true
}

fp_download_and_unpack

#copy JDK to the right dir
mv $J_DIR java-7-oracle
rm -rf /usr/lib/jvm/java-7-oracle
cp -rf java-7-oracle /usr/lib/jvm/

#install javaws-wrapper.sh
mv $J_INSTALL_DIR/jre/bin/javaws $J_INSTALL_DIR/jre/bin/javaws.real
install -m 755 javaws-wrapper.sh $J_INSTALL_DIR/jre/bin/javaws

#install jar.binfmt
install -m 755 jar.binfmt $J_INSTALL_DIR/jre/lib/jar.binfmt

#clean up
rm -rf java-7-oracle

#To add when an older version exists:
#safe_move jdk-7u2-linux-x64.tar.gz #must be modified for each release
#safe_move jdk-7u2-linux-i586.tar.gz #must be modified for each release
rmdir $OLDDIR 2> /dev/null || true
#remove previous versions, if they exist


db_fset oracle-java7-installer/local seen false

#This step is optional, recommended, and affects code below.
ls $J_INSTALL_DIR/man/man1/*.1 >/dev/null 2>&1 && \
  gzip -9 $J_INSTALL_DIR/man/man1/*.1 >/dev/null 2>&1

#Increment highest version by 1.
#Also assumes all Java helper programs (javaws, jcontrol, etc) at same version as java.
#These helpers should be slaves, or in the same path as java; thus, a reasonable assumption.

LATEST=1
LATEST=$((`LANG=C update-alternatives --display java | grep ^/ | sed -e 's/.* //g' | sort -n | tail -1`+1))

#create .java-7-oracle.jinfo file header:
if [ -e /usr/lib/jvm/.java-7-oracle.jinfo ]; then
   rm -f /usr/lib/jvm/.java-7-oracle.jinfo
fi
echo "name=java-7-oracle
alias=java-7-oracle
priority=$LATEST
section=non-free
" > /usr/lib/jvm/.java-7-oracle.jinfo


#link JRE files
for f in $J_INSTALL_DIR/jre/bin/*; do
    name=`basename $f`;
    if [ ! -f "/usr/bin/$name" -o -L "/usr/bin/$name" ]; then  #some files, like jvisualvm might not be links
        if [ -f "$J_INSTALL_DIR/man/man1/$name.1.gz" ]; then
            update-alternatives --install /usr/bin/$name $name $J_INSTALL_DIR/jre/bin/$name $LATEST --slave /usr/share/man/man1/$name.1.gz $name.1.gz $J_INSTALL_DIR/man/man1/$name.1.gz
            echo "jre $name $J_INSTALL_DIR/jre/bin/$name" >> /usr/lib/jvm/.java-7-oracle.jinfo
         else #no man pages available
            # [ ! $name = "javaws.real" ] = skip javaws.real     
            [ ! $name = "javaws.real" ] && update-alternatives --install /usr/bin/$name $name $J_INSTALL_DIR/jre/bin/$name $LATEST
            [ ! $name = "javaws.real" ] && echo "jre $name $J_INSTALL_DIR/jre/bin/$name" >> /usr/lib/jvm/.java-7-oracle.jinfo
         fi
    fi
done


#link JRE not in jre/bin
[ -f $J_INSTALL_DIR/jre/lib/jexec ]    && update-alternatives --install /usr/bin/jexec    jexec    $J_INSTALL_DIR/jre/lib/jexec    $LATEST --slave /usr/share/binfmts/jar jexec-binfmt $J_INSTALL_DIR/jre/lib/jar.binfmt && echo "jre jexec $J_INSTALL_DIR/jre/bin/jexec" >> /usr/lib/jvm/.java-7-oracle.jinfo

#This will issue ignorable warnings for alternatives that are not part of a group
#Link JDK files with/without man pages
if [ -d "$J_INSTALL_DIR/man/man1" ];then
    for f in $J_INSTALL_DIR/man/man1/*; do
        name=`basename $f .1.gz`;
        #some files, like jvisualvm might not be links. Further assume this for corresponding man page
        if [ ! -f "/usr/bin/$name" -o -L "/usr/bin/$name" ]; then
            if [ ! -f "$J_INSTALL_DIR/man/man1/$name.1.gz" ]; then
                name=`basename $f .1`;          #handle any legacy uncompressed pages
            fi
            if [ ! -e $J_INSTALL_DIR/jre/bin/$name ]; then #don't link already linked JRE files
                update-alternatives --install /usr/bin/$name $name $J_INSTALL_DIR/bin/$name $LATEST --slave /usr/share/man/man1/$name.1.gz $name.1.gz $J_INSTALL_DIR/man/man1/$name.1.gz
                echo "jdk $name $J_INSTALL_DIR/bin/$name" >> /usr/lib/jvm/.java-7-oracle.jinfo
            fi
        fi
    done

else  #no man pages available
    for f in $J_INSTALL_DIR/bin/*; do
        name=`basename $f`;
        if [ ! -f "/usr/bin/$name" -o -L "/usr/bin/$name" ]; then  #some files, like jvisualvm might not be links
            if [ ! -e $J_INSTALL_DIR/jre/bin/$name ]; then #don't link already linked JRE files
                update-alternatives --install /usr/bin/$name $name $J_INSTALL_DIR/bin/$name $LATEST
                echo "jdk $name $J_INSTALL_DIR/bin/$name" >> /usr/lib/jvm/.java-7-oracle.jinfo
            fi
        fi
    done
fi

# register binfmt; ignore errors, the alternative may already be
# registered by another JRE.
if which update-binfmts >/dev/null && [ -r /usr/share/binfmts/jar ]; then
    update-binfmts --package oracle-java7 --import jar || true
fi

echo "Oracle JDK 7 installed"

#Install Firefox (and compatible) plugin. $arch will be empty for unknown platform
[ -f $J_INSTALL_DIR/jre/lib/$arch/libnpjp2.so ] && update-alternatives --install /usr/lib/mozilla/plugins/libnpjp2.so libnpjp2.so $J_INSTALL_DIR/jre/lib/$arch/libnpjp2.so $LATEST && echo "plugin xulrunner-1.9-javaplugin.so $J_INSTALL_DIR/jre/lib/$arch/libnpjp2.so" >> /usr/lib/jvm/.java-7-oracle.jinfo && echo "plugin mozilla-javaplugin.so $J_INSTALL_DIR/jre/lib/$arch/libnpjp2.so" >> /usr/lib/jvm/.java-7-oracle.jinfo && echo "plugin libnpjp2.so $J_INSTALL_DIR/jre/lib/$arch/libnpjp2.so" >> /usr/lib/jvm/.java-7-oracle.jinfo

echo "Oracle JRE 7 browser plugin installed"

#DEBHELPER#

exit 0

# vim: ts=2 sw=2
